{"builtin":false,"collection":"Fif","group":"Kill background apps","name":"OnePlusHighPowerDetector.isForkedProcInWhiteList","author":"Fif_","version":2,"description":"Please refer to the OnePlusHighPowerDetector.isProcInWhiteList hook documentation.\n","className":"com.android.server.am.OnePlusHighPowerDetector","methodName":"isForkedProcInWhiteList","parameterTypes":["com.android.server.am.OnePlusHighPowerDetector$AppForkedProc"],"returnType":"boolean","minSdk":0,"maxSdk":28,"minApk":0,"maxApk":2147483647,"excludePackages":"^(?!android$).*","enabled":true,"optional":false,"usage":true,"notify":false,"luaScript":"-- Fif.OnePlusHighPowerDetector is a Lua hook definition \n-- designed to work with XPrivacyLua.\n\n-- Fif.OnePlusHighPowerDetector is free software: you can redistribute it and\/or modify\n-- it under the terms of the GNU General Public License as published by\n-- the Free Software Foundation, either version 3 of the License, or\n-- (at your option) any later version.\n\n-- Fif.OnePlusHighPowerDetector is distributed in the hope that it will be useful,\n-- but WITHOUT ANY WARRANTY; without even the implied warranty of\n-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-- GNU General Public License for more details.\n\n-- You should have received a copy of the GNU General Public License\n-- along with XPrivacyLua.  If not, see <http:\/\/www.gnu.org\/licenses\/>.\n\n-- Copyright (C) 2019 Philippe Troin (Fif_ on XDA)\n\nfunction after(hook, param)\n  local arg = param:getArgument(0)\n  local result = param:getResult()\n  local hookName = hook:getName()\n  local logPrefix\n\n  if hookName == 'OnePlusHighPowerDetector.isProcInWhiteList' then\n    logPrefix = tostring(arg.info.packageName) .. ': '\n  else \n    if hookName == 'OnePlusHighPowerDetector.isForkedProcInWhiteList' then\n      logPrefix = tostring(arg.pkgName) .. ': '\n    else\n      log('Unknown hook name: \"' .. tostring(hookName) .. '\"')\n      param:die_by_calling_missing_method()\n    end\n  end\n\n  -- log(logPrefix .. tostring(result))\n\n  if result ~= true then\n    param:setResult(true)\n    return true, logPrefix .. tostring(result), logPrefix .. 'true'\n  else\n    return false\n  end\nend\n"}