{"builtin":false,"collection":"Fif","group":"Read battery","name":"BatteryManager.getLongProperty","author":"Fif","version":1,"description":"Please refer to the Intent.createFromParcel\/battery hook documentation.\n","className":"android.os.BatteryManager","methodName":"getLongProperty","parameterTypes":["int"],"returnType":"long","minSdk":21,"maxSdk":999,"minApk":0,"maxApk":2147483647,"enabled":true,"optional":false,"usage":true,"notify":false,"luaScript":"-- BatteryManager.* is a set of Lua hook definition designed to work                     \n-- with XPrivacyLua.\n\n-- BatteryManager.* is free software: you can redistribute it and\/or modify\n-- it under the terms of the GNU General Public License as published by\n-- the Free Software Foundation, either version 3 of the License, or\n-- (at your option) any later version.\n\n-- BatteryManager.* is distributed in the hope that it will be useful,\n-- but WITHOUT ANY WARRANTY; without even the implied warranty of\n-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-- GNU General Public License for more details.\n\nfunction after(hook, param)\n  local result = param:getResult()\n  if result == nil then\n    return false\n  end\n\n  local batteryManager = param:getThis()\n  local property = param:getArgument(0)\n  local fake = nil\n  local propName\n\n  if property == batteryManager.BATTERY_PROPERTY_CHARGE_COUNTER and result ~= 0 then\n    propName = 'Charge counter'\n    fake = 0\n  elseif property == batteryManager.BATTERY_PROPERTY_ENERGY_COUNTER then\n    propName = 'Energy counter'\n    fake = 150000\n  elseif property == batteryManager.BATTERY_PROPERTY_STATUS and result ~= batteryManager.BATTERY_STATUS_DISCHARGING then\n    propName = 'Status'\n    fake = batteryManager.BATTERY_STATUS_DISCHARGING\n  end\n\n  if fake ~= nil then\n    param:setResult(fake)\n    return true, propName .. '=' .. tostring(result), propName .. '=' .. tostring(fake)\n  else\n    return false\n  end\nend\n"}