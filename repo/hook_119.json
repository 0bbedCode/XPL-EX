{"builtin":false,"collection":"Fif","group":"Group notifications","name":"Notification.GroupHelper.onNotificationPosted","author":"Fif_","version":4,"description":"This hook has nothing to do with privacy. It prevents notifications from being grouped by Android Oreo and later for a set of user-configrable apps.\nLook into the Notification.Ranker.onNotification* hooks for the same functionality for Marshmallow and Nougat.\n\nInstructions:\n1. Download both hooks:\n     - Notification.GroupHelper.onNotificationPosted\n     - Notification.GroupHelper.onNotificationRemoved\n2. Make sure that the Fif collection is enabled in XPL Pro.\n3. In XPL, navigate to the \"Android System\" (android) app (you may have to change the filter to \"Show all apps\" first), and expand the restriction categories.\n4.a. Check the \"Group notifications\" category.\n4.b. Or, alternately, enable both Notification.GroupHelper.onNotificationPosted and Notification.GroupHelper.onNotificationRemoved hooks for \"Android System\" (android) in XPL Pro.\n5. Configure a list of apps whose notifications should not be grouped with XPrivacyLua Pro, under \"Custom Values\", \"Ungrouped notification package names\".  List items are whitespace separated, and must match exactly, eg. \"com.android.chrome\".\n\nNotes: It is recommended not to force stop the system app, but reboot between changes to the hook or its configuration\/settings.\n\nChangelog:\n\nv4 - 2019-12-17\nFirst public release.\n","className":"com.android.server.notification.GroupHelper","methodName":"onNotificationPosted","parameterTypes":["android.service.notification.StatusBarNotification","boolean"],"minSdk":26,"maxSdk":999,"minApk":0,"maxApk":2147483647,"excludePackages":"^(?!android$).*","enabled":true,"optional":false,"usage":true,"notify":false,"luaScript":"-- Fif.Notification is a Lua hook set designed to work with XPrivacyLua.\n-- Copyright (C) 2018, 2019 Philippe Troin (Fif_ on XDA)\n\n-- Fif.Notification is free software: you can redistribute it and\/or modify\n-- it under the terms of the GNU General Public License as published by\n-- the Free Software Foundation, either version 3 of the License, or\n-- (at your option) any later version.\n\n-- Fif.Notification is distributed in the hope that it will be useful,\n-- but WITHOUT ANY WARRANTY; without even the implied warranty of\n-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-- GNU General Public License for more details.\n\n-- You should have received a copy of the GNU General Public License\n-- along with XPrivacyLua.  If not, see <http:\/\/www.gnu.org\/licenses\/>.\n\nfunction before(hook, param)\n    local notif = param:getArgument(0)\n    if notif == nil then\n        return false\n    end\n\n    local context = param:getApplicationContext()\n    local UngroupedApps = param:getValue('Fif.Notification.UngroupedApps', context)\n\n    if UngroupedApps == nil then\n        local packages = param:getSetting(\"Ungrouped notification package names\")\n        UngroupedApps = {}\n        local ungroupedAppsLog = {}\n        if packages ~= nil then\n            packages:gsub('[%S]+', function(x) UngroupedApps[x] = true table.insert(ungroupedAppsLog, x) end)\n        end\n        param:putValue('Fif.Notification.UngroupedApps', UngroupedApps, context)\n        log('Apps with ungrouped notifications: ' .. table.concat(ungroupedAppsLog, ', '))\n    end\n\n    local package = notif:getPackageName()\n    \n    if UngroupedApps[package] then\n        log('Deny ' .. package)\n        param:setResult(nil)\n        return true, package\n    else\n        log('Allow ' .. package)\n        return false\n    end\nend\n","settings":["Ungrouped notification package names"]}