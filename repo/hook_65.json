{"builtin":false,"collection":"Fif","group":"Read.Network","name":"NetworkInterface.getInetAddresses","author":"Fif_","version":1,"description":"Better version (won't crash most apps) of the same hook by A200K.\nLocal network IP address restriction (using java network interface).\n","className":"java.net.NetworkInterface","methodName":"getInetAddresses","parameterTypes":[],"minSdk":5,"maxSdk":999,"minApk":0,"maxApk":2147483647,"enabled":true,"optional":false,"usage":true,"notify":false,"luaScript":"-- Fif.NetworkInterface.getInetAddresses is a Lua hooks designed to work with XPrivacyLua.\n-- Copyright (C) 2018 Philippe Troin (Fif_ on XDA)\n\n-- Fif.NetworkInterface.getInetAddresses is free software: you can redistribute it and\/or modify\n-- it under the terms of the GNU General Public License as published by\n-- the Free Software Foundation, either version 3 of the License, or\n-- (at your option) any later version.\n\n-- Fif.NetworkInterface.getInetAddresses is distributed in the hope that it will be useful,\n-- but WITHOUT ANY WARRANTY; without even the implied warranty of\n-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-- GNU General Public License for more details.\n\n-- You should have received a copy of the GNU General Public License\n-- along with XPrivacyLua.  If not, see <http:\/\/www.gnu.org\/licenses\/>.\n\nfunction after(hook, param)\n    local res = param:getResult()\n    if res == nil or not res:hasMoreElements() then\n        return false\n    end\n\n    local inetAddressClass = luajava.bindClass('java.net.InetAddress')\n    local loopback = inetAddressClass:getLoopbackAddress()\n    local arrayListCls = luajava.bindClass('java.util.ArrayList')\n    local aList = luajava.new(arrayListCls)\n    aList:add(loopback)\n    local collectionsCls = luajava.bindClass('java.util.Collections')\n    local fake = collectionsCls:enumeration(aList)\n\n    local old = res:nextElement()\n\n    param:setResult(fake)\n    return true, old:toString(), loopback:toString()\nend\n"}