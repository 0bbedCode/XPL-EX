{"builtin":false,"collection":"Fif","group":"Use.Tracking","name":"SystemProperties.get.default\/custom","author":"Fif_","version":5,"description":"Please refer to the SystemProperties.get\/custom hook documentation.\n","className":"android.os.SystemProperties","methodName":"get","parameterTypes":["java.lang.String","java.lang.String"],"returnType":"java.lang.String","minSdk":1,"maxSdk":999,"minApk":0,"maxApk":2147483647,"enabled":true,"optional":false,"usage":true,"notify":false,"luaScript":"-- Fif.SystemProperties.get_custom is a Lua hook designed to work with XPrivacyLua.\n-- Copyright (C) 2018 Philippe Troin (Fif_ on XDA)\n\n-- Fif.SystemProperties.get_custom is free software: you can redistribute it and\/or modify\n-- it under the terms of the GNU General Public License as published by\n-- the Free Software Foundation, either version 3 of the License, or\n-- (at your option) any later version.\n\n-- Fif.SystemProperties.get_custom is distributed in the hope that it will be useful,\n-- but WITHOUT ANY WARRANTY; without even the implied warranty of\n-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-- GNU General Public License for more details.\n\n-- You should have received a copy of the GNU General Public License\n-- along with XPrivacyLua.  If not, see <http:\/\/www.gnu.org\/licenses\/>.\n\nfunction after(hook, param)\n    local result = param:getResult()\n    if result == nil then\n        return false\n    end\n\n    local context = param:getApplicationContext()\n    local BlacklistPropertyPrefixes = param:getValue('Fif.SystemProperties.get_custom.BlacklistPropertyPrefixes', context)\n\n    if BlacklistPropertyPrefixes == nil then\n        local blacklist = param:getSetting(\"Property blacklist (prefixes)\")\n        BlacklistPropertyPrefixes = {}\n        if blacklist ~= nil then\n            blacklist:gsub('[%S]+', function(x) table.insert(BlacklistPropertyPrefixes, x) end)\n        end\n        param:putValue('Fif.SystemProperties.get_custom.BlacklistPropertyPrefixes', BlacklistPropertyPrefixes, context)\n        log('Property prefix blacklist: ' .. table.concat(BlacklistPropertyPrefixes, ', '))\n    end\n\n    local key = param:getArgument(0)\n    local found = false\n    local i, prefix\n    for i, prefix in pairs(BlacklistPropertyPrefixes) do\n        if string.sub(key, 1, string.len(prefix)) == prefix then\n            found = true\n            break\n        end\n    end\n\n    if found then\n        local fake\n        if result:match('^[0-9a-fA-F]+$') then\n            fake = string.rep('0', result:len())\n        else\n            fake = 'Private'\n        end\n        log('Deny ' .. key .. '=' .. result .. ' \u2192 ' .. fake)\n        param:setResult(fake)\n        return true, key .. '=' .. result, key .. '=' .. fake\n    else\n        log('Allow ' .. key .. '=' .. result)\n        return false\n    end\nend\n","settings":["Property blacklist (prefixes)"]}