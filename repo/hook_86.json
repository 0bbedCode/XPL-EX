{"builtin":false,"collection":"Fif","group":"Vibrate when plugged","name":"VibratorService.startVibrationLocked","author":"Fif_","version":2,"description":"For OnePlus devices only.\nThis hook has nothing to do with privacy.  It blocks the  short double vibration that occurs whenever a OnePlus phone is plugged in.  This vibration cannot be disabled by any setting.\nTested with OOS 4.5.15 on OP5, OOS 9.5.13 on OP7Pro.\n\nInstructions:\n1. Download this hook.\n2. Make sure that the Fif collection is enabled in XPL Pro.\n3. In XPL, navigate to the \"Android System\" app (you may have to change the filter to \"Show all apps\" first), and expand the restriction categories.\n4.a. Check the \"Vibrate when plugged\" category.\n4.b. Or, alternately, enable VibratorService.startVibrationLocked hook for \"Android System\" in XPL Pro.\n\nChangelog:\n\nv2 - 2020-01-03\nChanged the group to \"Vibrate when plugged\" (no action required when upgrading the hook from version 1).\nNow works on all Android versions where XPrivacyLua works (v1 was broken on Oreo and later).\n\nv1 - 2018-09-06\nFirst public release.","className":"com.android.server.VibratorService","methodName":"startVibrationLocked","parameterTypes":["com.android.server.VibratorService$Vibration"],"returnType":"void","minSdk":0,"maxSdk":999,"minApk":0,"maxApk":2147483647,"excludePackages":"^(?!android$).*","enabled":true,"optional":false,"usage":true,"notify":false,"luaScript":"-- Fif.VibratorService.startVibrationLocked is a Lua hook definition \n-- designed to work with XPrivacyLua.\n\n-- Fif.VibratorService.startVibrationLocked is free software: you can redistribute it and\/or modify\n-- it under the terms of the GNU General Public License as published by\n-- the Free Software Foundation, either version 3 of the License, or\n-- (at your option) any later version.\n\n-- Fif.VibratorService.startVibrationLocked is distributed in the hope that it will be useful,\n-- but WITHOUT ANY WARRANTY; without even the implied warranty of\n-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-- GNU General Public License for more details.\n\n-- You should have received a copy of the GNU General Public License\n-- along with XPrivacyLua.  If not, see <http:\/\/www.gnu.org\/licenses\/>.\n\n-- Copyright (C) 2018, 2020 Philippe Troin (Fif_ on XDA)\n\nfunction before(hook, param)\n  local clsArray = luajava.bindClass('java.lang.reflect.Array')\n  local vibration = param:getArgument(0)\n  local effect = vibration.effect\n  local inhibit = false\n  local pat0 = 0\n  local pat1 = 10\n  local pat2 = 150\n  local pat3 = 12\n\n  if effect == nil then\n--    local msg\n--    msg = \"Vibration mUid=\" .. tostring(vibration.mUid)\n--       .. \" mTimeout=\" .. tostring(vibration.mTimeout)\n--       .. \" mRepeat=\" .. tostring(vibration.mRepeat)\n--       .. \" mPattern=\"\n--    local pattern = vibration.mPattern\n--    if pattern == nil then\n--      msg = msg .. \"<null>\"\n--    else\n--      local i\n--      for i = 0, pattern.length-1 do\n--        msg = msg .. \" \" .. tostring(clsArray:get(pattern, i))\n--      end\n--    end\n--    log(msg)\n\n    if ( vibration.mUid == 1000\n        and vibration.mTimeout == 0\n        and vibration.mRepeat == -1\n        and vibration.mPattern ~= nil\n        and vibration.mPattern.length == 4\n        and clsArray:get(vibration.mPattern, 0) == pat0\n        and clsArray:get(vibration.mPattern, 1) == pat1\n        and clsArray:get(vibration.mPattern, 2) == pat2\n        and clsArray:get(vibration.mPattern, 3) == pat3 ) then\n      inhibit = \"Up to Nougat\"\n    end\n  else\n--    local msg\n--    msg = \"Vibration uid=\" .. tostring(vibration.uid) .. \" effect=\" .. tostring(effect)\n--    log(msg)\n\n    if ( vibration.uid == 1000\n        and effect.mRepeat == -1\n        and effect.mTimings ~= nil\n        and effect.mTimings.length == 4\n        and clsArray:get(effect.mTimings, 0) == pat0\n        and clsArray:get(effect.mTimings, 1) == pat1\n        and clsArray:get(effect.mTimings, 2) == pat2\n        and clsArray:get(effect.mTimings, 3) == pat3\n        and effect.mAmplitudes ~= nil\n        and effect.mAmplitudes.length == 4\n        and clsArray:get(effect.mAmplitudes, 0) == 0\n        and clsArray:get(effect.mAmplitudes, 1) == -1\n        and clsArray:get(effect.mAmplitudes, 2) == 0\n        and clsArray:get(effect.mAmplitudes, 3) == -1 ) then\n      inhibit = \"Oreo and up\"\n    end\n  end\n\n  if inhibit ~= false then\n    log(\"Detected charger plugged vibration, inhibiting (\" .. inhibit .. \")\")\n    param:setResult(null)\n    return true, \"Inhibited charger plugged vibration\"\n  else\n    return false\n  end\nend\n"}