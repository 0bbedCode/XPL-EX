{"builtin":false,"collection":"Fif","group":"Read.Network","name":"WifiInfo.toString","author":"Fif_","version":1,"description":"NetworkInfo.toString and WifiInfo.toString block other ways an app can get your SSID (Wi-Fi Network Name) and other private network parameters.  The NetworkInfo.toString hook also blocks the APN leaking when connected via a cellular network.\nThe hooks will attempt to edit SSID, BSSID, APN and MAC address in the semi-formatted data returned by the toString methods, but will fall back to just overwriting everything if that fails.\nFor complete coverage, you may also want to enable the following hooks:\n- NetworkInfo.toString (repo)\n- NetworkInfo.getExtraInfo (stock)\n- WifiInfo.getIpAddress (repo)\n- WifiInfo.getBSSID (stock or repo version)\n- WifiInfo.getMacAddress (repo, may not be necessary in Android 6 Marshmallow or later)\n- WifiInfo.getSSID (stock)\nYou may also want NetworkInfo.createFromParcel (in the repo), but that's for hiding online state, and has a separate category (\"Internet offline\")\n\nInstructions:\n1. Download either or both NetworkInfo.toString and WifiInfo.toString hooks.\n2. Make sure that the Fif collection is enabled in XPL Pro.\n3. For any app for which you want the hook to apply:\n3.a. Toggle the \"Read Network\" category until it's fully enabled (red) in XPL.\n3.b. Or, alternately, enable either or both NetworkInfo.toString and WifiInfo.toString hook in XPL Pro.\n\nChangelog (for WifiInfo.toString):\n\nv1 - 2018-10-08\nFirst public release.","className":"android.net.wifi.WifiInfo","methodName":"toString","parameterTypes":[],"returnType":"java.lang.String","minSdk":1,"maxSdk":999,"minApk":0,"maxApk":2147483647,"enabled":true,"optional":false,"usage":true,"notify":false,"luaScript":"-- WifiInfo.toString is a Lua hook definition designed to work                     \n-- with XPrivacyLua.\n\n-- WifiInfo.toString is free software: you can redistribute it and\/or modify\n-- it under the terms of the GNU General Public License as published by\n-- the Free Software Foundation, either version 3 of the License, or\n-- (at your option) any later version.\n\n-- WifiInfo.toString is distributed in the hope that it will be useful,\n-- but WITHOUT ANY WARRANTY; without even the implied warranty of\n-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-- GNU General Public License for more details.\n\nfunction after(hook, param)\n    local result = param:getResult()\n    if result == nil then\n        return false\n    end\n\n    if result:find(\"SSID: \") == nil then\n        return false\n    end\n\n    local fake = result\n    local changed, pattern, replacement\n    local changes = 0\n    for pattern, replacement in pairs({[ \"^(SSID: ).*(, BSSID: %x%x:%x%x:%x%x:%x%x:%x%x:%x%x, MAC:)\"  ] = \"%1Private%2\",\n                                       [ \"(, SSID: ).*(, BSSID: %x%x:%x%x:%x%x:%x%x:%x%x:%x%x, MAC:)\" ] = \"%1Private%2\",\n                                       [ \"(, BSSID: )%x%x:%x%x:%x%x:%x%x:%x%x:%x%x(, )\"               ] = \"%102:00:00:00:00:00%2\",\n                                       [ \"(, MAC: )%x%x:%x%x:%x%x:%x%x:%x%x:%x%x(, )\"                 ] = \"%102:00:00:00:00:00%2\"}) do\n        fake, changed = fake:gsub(pattern, replacement)\n        if changed == 1 then\n            changes = changes + 1\n        end\n    end\n\n    if changes == 0 then\n        fake = \"Private\"\n    end\n\n    param:setResult(fake)\n\n    return true, result, fake\nend\n"}