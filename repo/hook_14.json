{"builtin":false,"collection":"Privacy","group":"Public.Storage","name":"BlockGuardOs.open","author":"M66B","version":2,"description":"Confine app to own storage, might crash","className":"libcore.io.BlockGuardOs","methodName":"open","parameterTypes":["java.lang.String","int","int"],"returnType":"java.io.FileDescriptor","minSdk":1,"maxSdk":999,"minApk":0,"maxApk":2147483647,"enabled":false,"optional":false,"usage":true,"notify":false,"luaScript":"-- This file is part of XPrivacyLua.\n\n-- XPrivacyLua is free software: you can redistribute it and\/or modify\n-- it under the terms of the GNU General Public License as published by\n-- the Free Software Foundation, either version 3 of the License, or\n-- (at your option) any later version.\n\n-- XPrivacyLua is distributed in the hope that it will be useful,\n-- but WITHOUT ANY WARRANTY; without even the implied warranty of\n-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-- GNU General Public License for more details.\n\n-- You should have received a copy of the GNU General Public License\n-- along with XPrivacyLua.  If not, see <http:\/\/www.gnu.org\/licenses\/>.\n\n-- Copyright 2017-2018 Marcel Bokhorst (M66B)\n\nfunction before(hook, param)\n    local ai = param:getApplicationContext():getApplicationInfo()\n    local dataDir = ai.dataDir .. '\\\/'\n    local clsFile = luajava.bindClass('java.io.File')\n    local sourceDir = luajava.new(clsFile, ai.sourceDir):getParent() .. '\\\/'\n\n    local path = param:getArgument(0)\n    if path == nil or\n            string.sub(path, 1, string.len(dataDir)) == dataDir or\n            string.sub(path, 1, string.len(sourceDir)) == sourceDir then\n        log('Allow ' .. path)\n        return false\n    else\n        log('Deny ' .. path)\n        local clsFileNotFound = luajava.bindClass('java.io.FileNotFoundException')\n        local fake = luajava.new(clsFileNotFound, path)\n        param:setResult(fake)\n        return true\n    end\nend\n"}