{"builtin":false,"collection":"Fif","group":"Use proximity wakelock","name":"PowerManager.newWakeLock","author":"Fif_","version":1,"description":"These hooks have nothing to do with privacy.  They prevent apps from blanking the screen when the proximity sensor detects a close object like your cheek.  If your proximity sensor is busted, you can use the hooks to make calls and keep the screen on if you apply them to the system dialer, hangouts, skype, etc.\n\nInstructions:\n1. Download both hooks:\n     - PowerManager.newWakelock\n     - PowerManager.Wakelock.release\n2. Make sure that the Fif collection is enabled in XPL Pro.\n3.a. In XPL, activate the \"Use proximity wakelock\" category for the apps that make use of the proximity wakelock.\n3.b. Or, alternately, enable both PowerManager.newWakelock and PowerManager.Wakelock.release hooks  in XPL Pro.\n\nChangelog:\n\nv1 - 2018-10-02\nFirst public release.","className":"android.os.PowerManager","methodName":"newWakeLock","parameterTypes":["int","java.lang.String"],"returnType":"android.os.PowerManager$WakeLock","minSdk":21,"maxSdk":999,"minApk":0,"maxApk":2147483647,"enabled":true,"optional":false,"usage":true,"notify":false,"luaScript":"-- Fif.PowerManager is a set of Lua hook definitions\n-- designed to work with XPrivacyLua.\n\n-- Fif.PowerManager is free software: you can redistribute it and\/or modify\n-- it under the terms of the GNU General Public License as published by\n-- the Free Software Foundation, either version 3 of the License, or\n-- (at your option) any later version.\n\n-- Fif.PowerManager is distributed in the hope that it will be useful,\n-- but WITHOUT ANY WARRANTY; without even the implied warranty of\n-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-- GNU General Public License for more details.\n\n-- You should have received a copy of the GNU General Public License\n-- along with XPrivacyLua.  If not, see <http:\/\/www.gnu.org\/licenses\/>.\n\n-- Copyright (C) 2018 Philippe Troin (Fif_ on XDA)\n\nfunction before(hook, param)\n  local flags = param:getArgument(0)\n  if bit32.band(flags, 32) ~= 0 then\n     -- Replace PROXIMITY_SCREEN_OFF_WAKELOCK (32) with PARTIAL_WAKELOCK (1)\n    local fake = bit32.bor(bit32.band(flags, bit32.bnot(32)), 1)\n    log('flags ' .. tostring(flags) .. ' \u2192 ' .. tostring(fake))\n    param:setArgument(0, fake)\n    return true, 'flags=' .. tostring(flags), 'flags=' .. tostring(fake)\n  else\n    return false\n  end\nend\n"}